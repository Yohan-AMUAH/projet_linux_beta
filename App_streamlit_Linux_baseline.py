# Importation des librairies necesaires

import numpy as np
import pandas as pd
import streamlit as st
import plotly.express as px
import yfinance as yf
import subprocess
import hydralit_components as hc
import os
st.set_page_config(
page_title="InvestAI - SAD",
page_icon="\\home_page.gif",
layout="wide",
initial_sidebar_state="collapsed",
)

st.markdown("<h1 style='text-align: center; background-color: #000045; color: #ece5f6'>Invest AI - SAD</h1>", unsafe_allow_html=True)
st.markdown("<h4 style='text-align: center; background-color: #000045; color: #ece5f6'>Un Syst√®me d'Aide √† la D√©cision pour l'Investissement Financier Intelligent</h4>", unsafe_allow_html=True)




menu_data = [

    {'label':"Price Data"},
]

over_theme = {'txc_inactive': '#16284C'}

menu_id = hc.nav_bar(
    menu_definition=menu_data,
    override_theme=over_theme,
    home_name='Home',
    #login_name='Logout',
    hide_streamlit_markers=False, #will show the st hamburger as well as the navbar now!
    sticky_nav=True, #at the top or not
    sticky_mode='pinned', #jumpy or not-jumpy, but sticky or pinned
    )

if menu_id == "Home":



    # D√©finir des couleurs attrayantes
    couleur_principale = "#3498db"  # Bleu
    couleur_secondaire = "#2ecc71"  # Vert

    # D√©finir le style de page
    st.markdown(
        f"""
        <style>
            .reportview-container {{
                background: {couleur_principale};
                color: white;
            }}
            .sidebar .sidebar-content {{
                background: {couleur_principale};
            }}
            .Widget {{
                color: {couleur_principale};
                background-color: #ecf0f1;
            }}
            .stButton > button {{
                color: white;
                background-color: {couleur_secondaire};
            }}
            .stTextInput > div > div > input {{
                color: {couleur_principale};
                background-color: #ecf0f1;
            }}
        </style>
        """,
        unsafe_allow_html=True
    )

    # Titre de la page
    st.title("InvestAI - R√©volutionnez vos d√©cisions financi√®res")

    # Afficher le GIF avec la fonction st.image
    st.image("home_page.gif", use_column_width=False, width=1200)

    # Introduction
    st.write("""
    InvestAI est un projet r√©volutionnaire con√ßu pour outiller les investisseurs dans leurs d√©cisions financi√®res en utilisant une approche holistique et intelligente. En combinant le scraping de donn√©es en temps r√©el depuis des sources de confiance telles que Finviz et Yahoo Finance, l'analyse de donn√©es historiques, l'application de mod√®les de pr√©diction avanc√©s, et l'√©valuation du sentiment des actualit√©s financi√®res, InvestAI offre une perspective compl√®te et captivante pour guider les investisseurs dans le monde complexe et dynamique du march√© financier.
    """)

    # Fonctionnalit√©s Cl√©s
    st.header("Fonctionnalit√©s Cl√©s")

    # Scraping de Donn√©es en Temps R√©el
    st.subheader("Scraping de Donn√©es en Temps R√©el")
    st.write("InvestAI extrait des donn√©es financi√®res en temps r√©el √† partir de deux sources majeures : Finviz et Yahoo Finance. Cette collecte en temps r√©el assure des informations √† jour et pertinentes pour une prise de d√©cision inform√©e.")

    # Mod√®les de Pr√©diction Avanc√©s
    st.subheader("Mod√®les de Pr√©diction Avanc√©s")
    st.write("Le projet int√®gre des mod√®les de pr√©diction sophistiqu√©s bas√©s sur l'apprentissage automatique pour anticiper les tendances du march√©. Ces mod√®les utilisent des indicateurs techniques tels que MACD, RSI, ADX, et les bandes de Bollinger pour fournir des pr√©dictions pr√©cises.")

    # Analyse de Sentiment
    st.subheader("Analyse de Sentiment")
    st.write("InvestAI analyse le sentiment des actualit√©s financi√®res en extrayant des informations pertinentes √† partir des publications de sites de confiance. Cette analyse aide les investisseurs √† comprendre le climat √©motionnel entourant un actif particulier.")

    # Interface Conviviale
    st.subheader("Interface Conviviale")
    st.write("Une interface conviviale offre aux utilisateurs une exp√©rience transparente pour explorer les donn√©es, visualiser les tendances, et obtenir des recommandations bas√©es sur des param√®tres sp√©cifiques.")

    # Avantages pour les Investisseurs
    st.header("Avantages pour les Investisseurs")

    # D√©cisions √âclair√©es
    st.subheader("D√©cisions √âclair√©es")
    st.write("InvestAI fournit des donn√©es en temps r√©el et des analyses approfondies, permettant aux investisseurs de prendre des d√©cisions √©clair√©es.")

    # R√©duction des Risques
    st.subheader("R√©duction des Risques")
    st.write("Les mod√®les de pr√©diction et l'analyse de sentiment contribuent √† minimiser les risques en anticipant les fluctuations du march√© et en identifiant les signaux potentiels.")

    # Personnalisation
    st.subheader("Personnalisation")
    st.write("Les investisseurs peuvent personnaliser leurs pr√©f√©rences, int√©grant des strat√©gies d'investissement sp√©cifiques et ajustant les param√®tres des mod√®les selon leurs besoins.")

    # Veille Concurrentielle
    st.subheader("Veille Concurrentielle")
    st.write("InvestAI fournit un avantage concurrentiel en surveillant constamment les changements sur les march√©s et en informant les investisseurs sur les opportunit√©s √©mergentes.")

    # Conclusion
    st.write("""
    En r√©sum√©, InvestAI transforme la mani√®re dont les investisseurs abordent le march√© financier, en alliant la puissance des donn√©es en temps r√©el, de l'analyse pr√©dictive et du sentiment des actualit√©s pour cr√©er une approche compl√®te, intelligente, et avant-gardiste de la prise de d√©cision en mati√®re d'investissement.
    """)






if menu_id == "Price Data":

    #definition des sidebars
    st.title("Stock Price Predictor")

    # Message d'astuce de navigation
    message_astuce = """
    **Sujet : Important - Astuce de Navigation dans l'Application InvestAI**

    Cher utilisateur d'InvestAI,

    Nous esp√©rons que votre exp√©rience sur notre plateforme est aussi enrichissante que possible. Pour vous assurer de tirer le meilleur parti de notre application, nous aimerions partager avec vous une astuce de navigation qui pourrait vous √©chapper.

    üëâ **Astuce de Navigation :**

    L'onglet de navigation essentiel se trouve discr√®tement sur le bord gauche de la page. Assurez-vous de d√©plier cet onglet pour acc√©der √† une panoplie de fonctionnalit√©s exclusives, de visualisations d√©taill√©es, et de puissants outils d'analyse. C'est votre passerelle vers une exp√©rience utilisateur compl√®te et personnalis√©e !

    N'oubliez pas de jeter un coup d'≈ìil et de d√©bloquer le plein potentiel d'InvestAI.

    Pour toute question ou assistance, n'h√©sitez pas √† nous contacter. Bonne exploration !

    Bien Cordialement,

    L'√©quipe InvestAI

    """



    # Afficher le message d'astuce dans Streamlit
    st.markdown(message_astuce)

    #ticker = st.sidebar.text_input('Ticker')
    #start_date = st.sidebar.date_input('Start Date')
    #end_date = st.sidebar.date_input('End Date')
    #frequency = st.sidebar.selectbox('Veullez selectionner la fr√©quence que vous souhaitez avoir dans les donn√©es dans la liste qui vous ait propos√©e.', ["Daily","Weekly","Monthly","Quarterly"])
    #st.session_state.variable_section1=ticker
    #validation=st.sidebar.button("Valider")
    #if validation:
        #if frequency =="Daily":
            #frequency="1d"
        #elif frequency =="Weekly":
            #frequency ="1wk"
        #elif frequency =="Monthly":
            #frequency ="1mo"
        #elif frequency =="Quarterly":
            #frequency ="3mo"
        #st.write("vous avez valid√©")
        #inf={
            #"ticker":[ticker],
            #"start_date":[start_date],
            #"end_date": [end_date],
            #"frequency": [frequency]
        #}


        #st.write("vous avez choisi une plage qui va de:", start_date ,"√†", end_date,"." )
        #subprocess.run(["python", "Scraping_Yahoo_f.py"], check=True)

        #import Scraping_Yahoo_finance , Scraping_Yahoo_f
        #Scraping_Yahoo_finance.syf(ticker,frequency,start_date,end_date)
        #Scraping_Yahoo_f.syf(ticker,frequency,start_date,end_date)

    #Chargement du fichier des donn√©es

    importer=st.button("Visualiser les r√©sultats")

    if importer:
        data = pd.read_csv("historical_data.csv")
        st.dataframe(data)



        # plot de la figure qui retrace l'historisque
        fig = px.line(data, x=data.index, y=data["Adj Close"])
        st.plotly_chart(fig)



        st.header('Price Movement Informations')
        data2=data
        data2['variation']=data["Adj Close"]/data["Adj Close"].shift(1) - 1
        data2.dropna(inplace=True)
        st.write(data2[["Adj Close","variation"]])

        #partie data processor
        #from main_processor import processor
        #[annual_return,standard_deviation]=processor()
        resultats = pd.read_csv("resultats.csv")
        st.dataframe(resultats)

        st.write("the annual return of this action is", resultats["annual_return"][0] , "%")
        st.write("The Standard deviation of this action is", resultats["standard_deviation"][0], "%")

    else:
        st.write("vous devez cliquer sur le boutton Visualiser les r√©sultats pour acc√©der aux r√©sultats")
